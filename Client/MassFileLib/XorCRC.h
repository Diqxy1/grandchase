#pragma once

inline void DecryptBufferPlus(int key, char* data, int length)
{
	const unsigned char XOR_HEADER[100] = {
		0x80, 0x25, 0xB7, 0x42, 0xB8, 0x89, 0xE7, 0x4C,
		0x06, 0x2D, 0x55, 0x83, 0xAF, 0x44, 0x99, 0x95,
		0x57, 0x19, 0xC6, 0x2D, 0x56, 0x68, 0x3A, 0xCC,
		0x4A, 0x71, 0x80, 0x9D, 0x0B, 0x70, 0x70, 0x8A,
		0x0F, 0x54, 0x9C, 0x1B, 0x06, 0xC0, 0xEA, 0x3C,
		0x60, 0x3B, 0x0B, 0xB1, 0x90, 0x5C, 0x4A, 0xF8,
		0x80, 0x28, 0xB1, 0x45, 0xB6, 0x85, 0xE7, 0x4C,
		0x06, 0x2D, 0x55, 0x83, 0xAF, 0x44, 0x99, 0x95,
		0xD9, 0x98, 0xBF, 0xAE, 0x53, 0x43, 0x63, 0xC8,
		0x4A, 0x71, 0x80, 0x9D, 0x0B, 0x70, 0x70, 0x8A,
		0x0F, 0x54, 0x9C, 0x1B, 0x06, 0xC0, 0xEA, 0x3C,
		0xC0, 0x88, 0x71, 0x48, 0xB3, 0xB9, 0x45, 0x78,
		0x29, 0x33, 0x35, 0x40
	};

	for (int i = 0; i < length; i++) {
		data[i] ^= XOR_HEADER[i % sizeof(XOR_HEADER)];
	}
	for (int i = 0; i < length; i++) {
		data[i] ^= key;
	}
}