#pragma once
#include "Actor.h"
#include "SobManager.h"
//#include <windows.h>    // ::GetTickCount()

#include "CenterEvent.h"
#include "CenterPacket.h"
#include "CenterNetLayer.h"
#include <map>
#include "CYOUBilling\CYOUPacket.h"

SmartPointer(KCenter);

struct KCYOUAuthUserInfo;
struct KCYOUCashData;

class KCenter : public KActor
{
    NiDeclareRTTI;

public:
    struct CenterPoolTag {};
    KCenter(void);
    virtual ~KCenter(void);

    static KCenterPtr Create();
    static void AddManager( KCenterPtr spCenter );
    static int ms_iUID;
  
    // override
    virtual void Tick();    // exit 상태일 경우 종료처리
    virtual KEvent* CreateKEvent() { return new KCenterEvent; }
    bool IsConnectedUser( DWORD dwUID );
    KCenterPtr GetThisPtr() { return std::static_pointer_cast<KCenter>((*this).shared_from_this()); }

protected:
    // override
    virtual void ProcessEvent( const KEventPtr& spEvent );
    virtual void OnDestroy();

    bool AddConnectedUser( DWORD dwUID );
    bool DelConnectedUser( DWORD dwUID );

protected:
    DECL_ON_FUNC( ECN_VERIFY_ACCOUNT_REQ );
    DECL_ON_FUNC( ECN_VERIFY_ACCOUNT_ACK );

   _DECL_ON_FUNC( ECN_LOUD_MSG_REQ, KSerBuffer );
   _DECL_ON_FUNC( ECN_REPETITION_PROVIDE_CANCEL_REQ, KECN_REPETITION_PROVIDE_REQ );
   _DECL_ON_FUNC( ECN_MINIGAME_RANK_REQ, KMiniGameRankList );
   _DECL_ON_FUNC( ECN_UPDATE_DONATION_REQ, KDotantionSyncData );
   _DECL_ON_FUNC( ECN_SERVER_RELAY_PACKET_REQ, KServerRelayPacket );
    DECL_ON_FUNC( ECN_ADD_USER_REQ );
    DECL_ON_FUNC( ECN_DEL_USER_REQ );
   _DECL_ON_FUNC( ECN_ADD_MULTI_USER_REQ, std::vector<DWORD> );
   _DECL_ON_FUNC( ECN_SUBSCRIPTION_CURRENT_GIFT_NUM_UPDATE_REQ, PAIR_INT );
   _DECL_ON_FUNC( ECN_UPDATE_DICE_PLAY_REQ, KDicePlaySyncData );
    DECL_ON_FUNC( ECN_LOG_OUT_NOT );

   _DECL_ON_FUNC( ECN_ENTER_SQUARE_REQ, KSquareUserInfo );
   _DECL_ON_FUNC( ECN_LEAVE_SQUARE_NOT, DWORD );
   _DECL_ON_FUNC( ECN_UPDATE_USER_SQUARE_POS_NOT, KSquarePos );
   _DECL_ON_FUNC( ECN_NEW_SQUARE_USER_NOT, KSquareUserInfo );
    DECL_ON_FUNC( ECN_UPDATE_NEIGHBORHOOD_SQUARE_POS_NOT );
    DECL_ON_FUNC( ECN_LEAVE_SQUARE_BROAD );
   _DECL_ON_FUNC( ECN_SQUARE_RELAY_PACKET_REQ, KSquareRelayPacket );
    DECL_ON_FUNC( ECN_ENTER_GUILD_SQUARE_REQ );
   _DECL_ON_FUNC( ECN_ENTER_MINIGAME_NOT, DWORD );
   _DECL_ON_FUNC( ECN_EXIT_MINIGAME_NOT, DWORD );
    DECL_ON_FUNC( ECN_ADD_GUILD_USER_REQ );
   _DECL_ON_FUNC( ECN_ADD_GUILD_USER_ACK, KECN_ADD_GUILD_USER_REQ );
    DECL_ON_FUNC( ECN_CHAT_REQ );
    DECL_ON_FUNC( ECN_CHAT_ACK );
   _DECL_ON_FUNC( ECN_ADD_NEW_GUILD_NOT, KNOneGuildData );
    DECL_ON_FUNC( ECN_DRUMOUT_GUILD_USER_NOT );
    DECL_ON_FUNC( ECN_UPDATE_GUILD_MEMBER_COMMENT_NOT );
   _DECL_ON_FUNC( ECN_GUILD_MARK_REG_STATUS_REQ, PAIR_DWORD_UCHAR );
   _DECL_ON_FUNC( ECN_SQUARE_LIST_REQ, PAIR_DWORD );
    DECL_ON_FUNC( ECN_CHANGE_GUILD_MEMBER_LEVEL_NOT );
    DECL_ON_FUNC( ECN_UPDATE_GUILD_NOTICE_NOT );
    DECL_ON_FUNC( ECN_UPDATE_GUILD_NAME_NOT );
   _DECL_ON_FUNC( ECN_UPDATE_GUILD_URL_NOT, KNGuildURL );

    DECL_ON_FUNC( ECN_JOIN_GUILD_REQ );
    DECL_ON_FUNC( ECN_JOIN_GUILD_ACK );
   _DECL_ON_FUNC( ECN_CANCEL_JOIN_GUILD_REQ, PAIR_DWORD );
    DECL_ON_FUNC( ECN_CANCEL_JOIN_GUILD_ACK );
    DECL_ON_FUNC( ECN_CHANGE_GUILD_MEMBER_LEVEL_REQ );
    DECL_ON_FUNC( ECN_CHANGE_GUILD_MEMBER_LEVEL_ACK );
   _DECL_ON_FUNC( ECN_SELF_DRUMOUT_GUILD_REQ, PAIR_DWORD );
    DECL_ON_FUNC( ECN_SELF_DRUMOUT_GUILD_ACK );
    DECL_ON_FUNC( ECN_ACCEPT_GUILD_JOINER_REQ );
    DECL_ON_FUNC( ECN_ACCEPT_GUILD_JOINER_ACK );
    DECL_ON_FUNC( ECN_REJECT_GUILD_JOINER_REQ );
    DECL_ON_FUNC( ECN_REJECT_GUILD_JOINER_ACK );
    DECL_ON_FUNC( ECN_BREAKUP_GUILD_REQ );
    DECL_ON_FUNC( ECN_BREAKUP_GUILD_ACK );
   _DECL_ON_FUNC( ECN_CHANGE_GUILD_JOIN_SETTING_NOT, KNGuildJoinPolicy );
   _DECL_ON_FUNC( ECN_CHANGE_GUILD_JOIN_SETTING_REQ, KCnNGuildJoinPolicy );
   _DECL_ON_FUNC( ECN_CHANGE_GUILD_JOIN_SETTING_ACK, KCnNGuildJoinPolicy );
    DECL_ON_FUNC( ECN_GUILD_MEMEBER_LIST_SYNC_NOT );
    DECL_ON_FUNC( ECN_INVITE_GUILD_USER_REQ );
   _DECL_ON_FUNC( ECN_UPDATE_GUILD_POINT_REQ, KGuildPointBroad );
   _DECL_ON_FUNC( ECN_SQUARE_USER_SYNC_REQ, KSquarePos );

   _DECL_ON_FUNC( ECN_UPDATE_NEW_DONATION_REQ, MAP_DWORD_INT );
   _DECL_ON_FUNC( ECN_UPDATE_GUILD_MEMBER_NICK_NOT, KGuildUserName );
   _DECL_ON_FUNC( ECN_GUILD_MEMBER_LEVELUP_NOT, KGuildUserCharacter );
   _DECL_ON_FUNC( ECN_INVITE_GUILD_NOT, KGuildInvite );
   _DECL_ON_FUNC( ECN_GUILD_PAGE_REQ, UCHAR );

    DECL_ON_FUNC( ECN_USER_SERVER_ROOM_REQ );
    DECL_ON_FUNC( ECN_USER_SERVER_ROOM_ACK );
   _DECL_ON_FUNC( ECN_SQUARE_LIST_ACK, PAIR_DWORD );
    DECL_ON_FUNC( ECN_USER_EXIT_GAME_NOT );

   _DECL_ON_FUNC( ECN_CREATE_PARTY_REQ, KPartyData );
   _DECL_ON_FUNC( ECN_CREATE_PARTY_ANSWER, KPartyData );
   _DECL_ON_FUNC( ECN_INVITE_PARTY_REQ, KPartyData );
   _DECL_ON_FUNC( ECN_INVITE_PARTY_ANSWER, KPartyData );
   _DECL_ON_FUNC( ECN_CHANGE_PARTY_HOST_REQ, KPartyData );
   _DECL_ON_FUNC( ECN_LEAVE_PARTY_REQ, KPartyData );
   _DECL_ON_FUNC( ECN_INVITE_PARTY_ROOM_REQ, KPartyRoomData );
   _DECL_ON_FUNC( ECN_BAN_PARTY_USER_REQ, KPartyData );
   _DECL_ON_FUNC( ECN_NOTICE_BROAD, std::vector<KSerBuffer> );
   _DECL_ON_FUNC( ECN_INVITE_AGIT_REQ, KInviteAgitReq );
   _DECL_ON_FUNC( ECN_FIND_USER_SEND_LETTER_NOT, DWORD );
    DECL_ON_FUNC( ECN_OLYMPIC_SYNC_SOLO_DATA_NOT );
    DECL_ON_FUNC( ECN_OLYMPIC_SYNC_TEAM_DATA_REQ );

   _DECL_ON_FUNC( ECN_PARTY_USER_READY_REQ, KPartyData );

   _DECL_ON_FUNC( ECN_BUFF_DONATION_DATA_UPDATE_REQ, int );

   _DECL_ON_FUNC( ECN_CYOU_USER_HEART_BEAT_REQ, KCYOUAuthUserInfo );
   _DECL_ON_FUNC( ECN_CYOU_CASH_CHANGE_REQ, KCYOUCashData );
   _DECL_ON_FUNC( ECN_CYOU_CHANGE_CASH_ACK, KCYOUCashPoint );
   _DECL_ON_FUNC( ECN_CYOU_CHANGE_CASH_LOG_NOT, KCYOUChangeCashLogData );
   _DECL_ON_FUNC( ECN_CYOU_USER_AGREEMENT_REQ, KCYOUAuthUserInfo );
   _DECL_ON_FUNC( ECN_CYOU_GET_CURRENT_CASH_REQ, KCYOUCashData );
   
   _DECL_ON_FUNC( ECN_CYOU_GET_CURRENT_CASH_ACK, KCYOUCashPoint );
   _DECL_ON_FUNC( ECN_CYOU_BUY_LOG_REQ, KCYOUCashData );
    
    DECL_ON_FUNC( ECN_CYOU_USER_HEART_BEAT_ACK );

   _DECL_ON_FUNC( ECN_CYOU_USER_LOGIN_REQ, KCYOUAuthUserInfo );
    DECL_ON_FUNC( ECN_CYOU_USER_LOGIN_ACK );
   _DECL_ON_FUNC( ECN_CYOU_USER_LOGOUT, KCYOUAuthUserInfo );

    DECL_ON_FUNC( ECN_DUNGEON_RANK_CURRENT_SEASON_ADD_RANK_REQ );

    _DECL_ON_FUNC( ECN_BILLBOARD_DATA_BROAD_REQ, KECNBillboardChat );

protected:
    KServerInfo                             m_kServerInfo;
    std::map< DWORD, KConnectedUser >       m_mapConnectedUser;
};
